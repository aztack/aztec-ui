const $fs = require('fs');
const $path = require('path');

// helpers
const capitalize = (str) => `${str[0].toUpperCase()}${str.substr(1)}`;
const camelize = (str) => str.split('-').map(capitalize).join('');
const _ = (str) => console.log(str);

const __ = iconFiles = []; __._ = __.forEach
walk($path.resolve(__dirname, '../src/components/icons/builtin'), (filename) => {
  if (filename === 'index.tsx') return;
  iconFiles.push(filename.replace('.tsx', ''));
});

// output
_(`//Auto Generated by 'npm run gen-icon-index`);
__._(name => {
  _(`import ${camelize(name)} from './${name}';`)
});
_(`export default {`)
__._(name => {
_(`  "${name}": ${camelize(name)}`);
});
_(`};`)

// walk dir recursively
function walk(dir, cb) {
  const files = $fs.readdirSync(dir);
  files.forEach(file => {
    const path = $path.join(dir, file);
    if ($fs.statSync(path).isDirectory()) {
      walk(path, cb);
    } else {
      cb(file);
    }
  });
};